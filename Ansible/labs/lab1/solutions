1. Use an ad-hoc command to check if all hosts are reachable using the ping module.
-> ansible -i inventory all -m ping

2. Write an ad-hoc command to create a directory named /tmp/testdir on all managed nodes.
-> ansible -i inventory all -m file -a "path=/tmp/testdir state-directory"

3. Use an ad-hoc command to install the 'git' package using the yum module.
-> ansible -i inventory all -m yum -a "name=git state=present"

4. Write an ad-hoc command to copy a local file named 'index.html' to '/tmp/index.html' on all web servers.
-> ansible -i inventory webservers  -m copy -a "src=index.html dest=/tmp/index.html"

5. Use an ad-hoc command to restart the 'nginx' service on all hosts that have it installed.
-> ansible -i inventory webservers  -m yum -a "name=nginx state=restarted"

6. Change File Permissions
-> ansible all -m file -a "path=/tmp/file.txt mode=0644"

7. Delete a File
-> ansible all -m file -a "path=/tmp/file.txt state=absent"

8. Create a file
-> ansible all -m file -a "path=/tmp/file.txt state=present"

9. Delete a directory
-> ansible all -m file -a "path=/tmp/myDir state=absent"

---------------------------------------------------------------------------------------
👤 USER & GROUP MANAGEMENT
 10. Create a group
-> ansible all -m group -a "name=Devleoprs state=present" -b

11. Add a user to a group
-> ansible all -m user -a "name=hesham group=Devleoprs state=present"

---------------------------------------------------------------------------------------
🛠️ PACKAGE MANAGEMENT
12. Remove a package
 -> ansible all -m yum -a "name=python state=absent" -b

 13. Upgrade all packages
 -> ansible all -m yum -a "state=latest" -b

---------------------------------------------------------------------------------------
🔌 SERVICE MANAGEMENT
14. Stop a service
 -> ansible all -m service -a "name=httpd state=stopped" -b

 15. Enable a service on boot
  -> ansible all -m service  -a "name=nginx enabled=yes" -b

---------------------------------------------------------------------------------------  
📝 FILE CONTENT OPERATIONS
16 Append a line to a file
-> ansible all -m shell -a "echo 'This is a new line' >> /tmp/example.txt"
or
-> ansible all -m lineinfile -a "path=/tmp/example.txt line=This is a new line created=yes"

17. Replace a line in a file 
-> ansible all -m lineinfile -a "path=/etc/ssh/sshd_config regexp='^PermitRootLogin' line='PermitRootLogin no'" -b

---------------------------------------------------------------------------------------

🔒 PERMISSION & OWNERSHIP
18. Change file owner
-> ansible all -m file -a "path=/tmp/file owner=hesham group=DevOps" -b

19. Fetch a file from remote nodes to control node
-> ansible all -m fetch -a "src=/etc/hosts dest=./hosts_backup flat=yes"

20. Show IP address of each node
-> ansible all -m setup -a "filter=ansible_default_ipv4.address"
or 
-> ansible all -m shell -a "hostname -I"

21. List all .log files in /var/log
-> ansible all -m shell -a "ls /var/log/*.log"

22. Run a custom shell script
-> ansible all -m script -a "./deploy.sh"
